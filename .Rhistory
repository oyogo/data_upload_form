shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinydashboard)
library(data.table)
runApp()
runApp()
runApp()
runApp()
?wellPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
crops_combined <- data.table(dbReadTable(dbConn, "combined_hortfood_crops_makueni"))[1:5] %>%
dplyr::select(sort(names(.)))
crops_combined2 <- data.table(dbReadTable(dbConn, "combined_hortfood_crops_makueni"))[1:5] %>%
dplyr::select(sort(names(.)))
crop_prod <- read.csv("data/crop_prod_makueni.csv")
setdiff(crops_combined2,crop_prod)
setdiff(names(crops_combined2),names(crop_prod))
h <- setdiff(names(crops_combined2),names(crop_prod))
h
class(h)
is.null(h)
h <- setdiff(names(crop_prod),names(crops_combined2))
h
length(names(crop_prod))
length(names(crops_combined2))
cat(h)
writeLines(h)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(crops_combined2)
runApp()
runApp()
cat(h)
runApp()
crop_prod <- read.csv("data/crop_prod_makueni.csv")
h <- setdiff(names(crop_prod),names(crops_combined2))
cat(h)
is.null(h)
h
runApp()
runApp()
is.null(h)
writeLines(h)
is.null(writeLines(h))
runApp()
runApp()
runApp()
crop_prod2 <- read.csv("data/crop_prod_makueni2.csv")
h <- setdiff(names(crop_prod2),names(crops_combined2))
cat(h)
is.null(writeLines(H))
is.null(writeLines(h))
class(h)
print(h)
class(print(h))
all(colnames(crops_combined2) %in% colnames(crop_prod2))
all(colnames(crops_combined2) %in% colnames(crop_prod))
View(crops_combined)
View(crops_combined)
crop_prod <- read.csv("data/crop_prod_makueni.csv")
all(colnames(crops_combined2) %in% colnames(crop_prod))
runApp()
runApp()
runApp()
colourpicker:::colourPickerAddin()
runApp()
colourpicker:::colourPickerAddin()
colourpicker:::colourPickerAddin()
runApp()
library(shinyWidgets)
runApp()
runApp()
runApp()
install.packages("shinymaterial")
library(shinymaterial)
argonInfoCard(
value,
title = NULL,
stat = NULL,
stat_icon = NULL,
description = NULL,
icon,
icon_background = "default",
hover_lift = FALSE,
shadow = FALSE,
background_color = NULL,
gradient = FALSE,
width = 3
)
install.packages("argonDash")
library(argonDash)
argonInfoCard(
value,
title = NULL,
stat = NULL,
stat_icon = NULL,
description = NULL,
icon,
icon_background = "default",
hover_lift = FALSE,
shadow = FALSE,
background_color = NULL,
gradient = FALSE,
width = 3
)
argonInfoCard(
49889,
title = "Poulation",
stat = NULL,
stat_icon = NULL,
description = NULL,
icon,
icon_background = "default",
hover_lift = FALSE,
shadow = FALSE,
background_color = NULL,
gradient = FALSE,
width = 3
)
argonInfoCard(
49889,
title = "Poulation",
stat = NULL,
stat_icon = NULL,
description = NULL,
icon_background = "default",
hover_lift = FALSE,
shadow = FALSE,
background_color = NULL,
gradient = FALSE,
width = 3
)
argonInfoCard(
value = textOutput("value"),
title = "NEW USERS",
stat = -3.48,
stat_icon = "arrow-down",
description = "Since last week",
icon = "chart-pie",
icon_background = "warning",
shadow = TRUE
)
shiny::runApp()
runApp()
runApp()
colourpicker:::colourPickerAddin()
runApp()
length(colnames(crop_prod))
length(crop_prod)==length(colnames(crops_combined))
length(crop_prod)==length(colnames(crops_combined2))
length(crop_prod)==length(colnames(crop_prod2))
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
crop_prod <- data.table::fread("data/crop_prod_makueni.csv")
View(crop_prod)
str(crop_prod)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
checking <- ata.table(dbReadTable(dbConn, "combined_hortfood_crops_makueni"))
checking <- data.table(dbReadTable(dbConn, "combined_hortfood_crops_makueni"))
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
checking <- data.table(dbReadTable(dbConn, "combined_hortfood_crops_makueni"))
View(checking)
View(checking)
runApp()
runApp()
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
dbListTables(dbConn)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/OneDrive - CGIAR/R/dashboards/dataupload')
runApp('~/OneDrive - CGIAR/R/dashboards/dataupload')
runApp('~/OneDrive - CGIAR/R/dashboards/dataupload')
runApp()
runApp('~/OneDrive - CGIAR/R/dashboards/dataupload')
runApp('~/OneDrive - CGIAR/R/dashboards/dataupload')
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
load("~/OneDrive - CGIAR/R/dashboards/data_upload_form/.RData")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
dbListTables(dbConn)
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
dbListTables(dbConn)
earthdams_makueni <- data.table(dbReadTable(dbConn, "makueni_earthdams"))
View(earthdams_makueni)
?write.csv()
runApp()
runApp()
runApp()
runApp()
earthdams_makueni <- data.table(dbReadTable(dbConn, "makueni_earthdams"))
View(earthdams_makueni)
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
earthdams_makueni <- data.table(dbReadTable(dbConn, "makueni_earthdams"))
View(earthdams_makueni)
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
earthdams_makueni <- data.table(dbReadTable(dbConn, "makueni_earthdams"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
dbListTables(dbConn)
livestock <- data.table(dbReadTable(dbConn, "livestock_ai"))
View(livestock)
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
livestock <- data.table(dbReadTable(dbConn, "livestock_ai"))
View(livestock)
runApp()
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
livestock <- data.table(dbReadTable(dbConn, "livestock_ai"))
View(livestock)
runApp()
paste(livestock_ai)
paste(livestock)
shiny::runApp()
runApp()
runApp()
install.packages("datamods")
library(datamods)
?validation_ui
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
dbListTables(dbConn)
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
livestock <- data.table(dbReadTable(dbConn, "livestock_ai"))
View(livestock)
runApp()
runApp()
runApp()
runApp()
?full_join
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
earthdams_makueni <- data.table(dbReadTable(dbConn, "makueni_earthdams"))
livestock <- data.table(dbReadTable(dbConn, "livestock_ai"))
str(earthdams_makueni)
str(livestock)
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
earthdams_makueni <- data.table(dbReadTable(dbConn, "makueni_earthdams"))
boreholes <- data.table(dbReadTable(dbConn, "makueni_boreholes"))
View(boreholes)
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
boreholes <- data.table(dbReadTable(dbConn, "makueni_boreholes"))
View(boreholes)
install.packages("shiny.collections")
library(shiny.collections)
devtools::install_github("Appsilon/shiny.collections")
library(shiny.collections)
usethis::edit_r_environ()
shiny::runApp()
runApp()
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
boreholes_dt <- data.table(dbReadTable(dbConn, "makueni_boreholes"))
boreholes_df <- dbReadTable(dbConn, "makueni_boreholes")
colnames(boreholes_dt)
colnames(boreholes_df)
boreholes_df[,"WARD"]==boreholes_dt[,"WARD"]
class(boreholes_dt[,"WARD"])
class(boreholes_df[,"WARD"])
runApp()
boreholes_new <- read.csv("data/Boreholes_new.csv")
class(boreholes_df[,"DEPTH.metres."])
class(boreholes_new[,"DEPTH.metres."])
boreholes_new$DEPTH.metres. <- as.character(boreholes_new$DEPTH.metres.)
class(boreholes_new[,"DEPTH.metres."])
boreholes_new[,"DEPTH.metres."] <- eval( call( paste0("as.", class(boreholes_df[,"DEPTH.metres."])), boreholes_new[,"DEPTH.metres."]) )
class(boreholes_new[,"DEPTH.metres."])
runApp()
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
boreholes_df <- dbReadTable(dbConn, "makueni_boreholes")
View(boreholes_df)
runApp()
runApp()
dbConn <- dbConnect(RSQLite::SQLite(), "data/makueni_db.db")
dbListTables(dbConn)
sanddams <- dbReadTable(dbConn, "makueni_sanddams")
View(sanddams)
runApp()
runApp()
